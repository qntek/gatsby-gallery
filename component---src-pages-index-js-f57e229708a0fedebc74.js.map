{"version":3,"file":"component---src-pages-index-js-f57e229708a0fedebc74.js","mappings":"2PAEe,SAASA,IACtB,MAAMC,EACJ,uBACEC,MAAM,6BACNC,UAAU,4CACVC,MAAO,GACPC,OAAQ,GACRC,QAAQ,YACRC,YAAY,IACZC,OAAO,eACPC,KAAK,OACLC,cAAc,QACdC,eAAe,SAEf,wBAAMH,OAAO,OAAOI,EAAE,gBAAgBH,KAAK,SAC3C,wBAAMG,EAAE,0SAGZ,OACE,0BAAQT,UAAU,8CAChB,uBAAKA,UAAU,4EACb,qBACEA,UAAU,eACVU,KAAK,0CACLC,OAAO,SACPC,IAAI,cAEHd,GAEH,qBACEY,KAAK,2BACLV,UAAU,eACVW,OAAO,SACPC,IAAI,cACL,kBAMT,C,wBClBA,MApBkB,IAAqC,IAApC,MAAEC,EAAK,QAAEC,EAAO,WAAEC,GAAY,EAC/C,MAAMC,EAAOC,IAAQH,EAAS,CAAEI,OAAO,IACvC,OACE,gBAAC,EAAAC,KAAI,CAACC,GAAE,IAAMJ,GACZ,uBAAKhB,UAAU,oCACb,gBAAC,EAAAqB,EAAW,CACVrB,UAAU,aACVa,OAAOS,EAAAA,EAAAA,GAAST,GAChBU,IAAKT,IAEP,uBAAKd,UAAU,qIACf,uBAAKA,UAAU,yCACb,qBAAGA,UAAU,iCAAiCc,GAC9C,qBAAGd,UAAU,uCAAuCe,KAGnD,EC0DX,MAtEkB,IAAe,IAAd,KAAES,GAAM,EAC1B,MAAMC,EAAaD,EAAKE,YAAYC,MAClCC,KAAKC,GAEJ,gBAAC,EAAS,CACThB,MAAOgB,EAAKC,OAAOC,QAAQC,gBAAgBC,gBAC3CnB,QAASe,EAAKK,KACdnB,WAAYc,EAAKM,OAAOD,KACxBE,IAAKP,EAAKQ,OAIZC,UAEF,IAAIC,EAAgBd,EAAWe,MAC/B,MAAMC,EAAsB,GACtBC,EAAsB,GACtBC,EAAwB,GACxBC,EAAuB,GAC7B,KAAOL,GACNE,EAAoBI,KAAKN,GACzBA,EAAgBd,EAAWe,MAC3BE,EAAoBG,KAAKN,GACzBA,EAAgBd,EAAWe,MAC3BG,EAAsBE,KAAKN,GAC3BA,EAAgBd,EAAWe,MAC3BI,EAAqBC,KAAKN,GAC1BA,EAAgBd,EAAWe,MAE5B,MAAMM,EACL,uBAAK9C,UAAU,iHACd,uBAAKA,UAAU,+BAA+ByC,GAC9C,uBAAKzC,UAAU,+BAA+B0C,GAC9C,uBAAK1C,UAAU,+BAA+B2C,GAC9C,uBAAK3C,UAAU,+BAA+B4C,IAGhD,OACC,uBAAK5C,UAAU,kBACd,gBAAC+C,EAAA,EAAM,CACNC,aAAa,EACbC,OAAQhC,IAAQ,IAAIO,EAAKE,YAAYC,MAAM,GAAGO,KAAQ,CAAEhB,OAAO,MAE/D4B,EACD,gBAACjD,EAAM,MACF,EA2BD,MAAMqD,EAAO,IAAM,6BAAO,Y","sources":["webpack://gatsby-gallery-slideshow/./src/components/Footer.jsx","webpack://gatsby-gallery-slideshow/./src/components/Thumbnail.jsx","webpack://gatsby-gallery-slideshow/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\n\nexport default function Footer() {\n  const githubIcon = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"icon icon-tabler icon-tabler-brand-github\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n      <path d=\"M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5\"></path>\n    </svg>\n  );\n  return (\n    <footer className=\"h-35 pb-4 absolute bottom-0 left-0 right-0\">\n      <div className=\"flex justify-between content-center  border-t border-stone-300 pt-3 px-6\">\n        <a\n          className=\"inline-block\"\n          href=\"https://github.com/qntek/gatsby-gallery\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {githubIcon}\n        </a>\n        <a\n          href=\"https://github.com/qntek\"\n          className=\"inline-block\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Tomasz Kuncio\n        </a>\n      </div>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport slugify from \"slugify\";\nconst Thumbnail = ({ image, picName, artistName }) => {\n  const path = slugify(picName, { lower: true });\n  return (\n    <Link to={`/${path}`}>\n      <div className=\"relative rounded overflow-hidden\">\n        <GatsbyImage\n          className=\"z-0 w-full\"\n          image={getImage(image)}\n          alt={picName}\n        />\n        <div className=\"absolute z-10 bottom-0 left-0 w-full h-full bg-hero-background hover:bg-hero-hover active:bg-hero-hover ease-linear duration-200\"></div>\n        <div className=\"absolute bottom-8 left-6 right-6 z-20\">\n          <p className=\"text-3xl font-bold text-white\">{picName}</p>\n          <p className=\"text-2x1 font-bold text-neutral-400\">{artistName}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Thumbnail;\n","import * as React from 'react';\nimport slugify from 'slugify';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { graphql } from 'gatsby';\nimport Thumbnail from '../components/Thumbnail';\nimport '../styles/index.css';\n\nconst IndexPage = ({ data }) => {\n\tconst thumbnails = data.allDataJson.nodes\n\t\t.map((node) => {\n\t\t\treturn (\n\t\t\t\t<Thumbnail\n\t\t\t\t\timage={node.images.gallery.childImageSharp.gatsbyImageData}\n\t\t\t\t\tpicName={node.name}\n\t\t\t\t\tartistName={node.artist.name}\n\t\t\t\t\tkey={node.id}\n\t\t\t\t/>\n\t\t\t);\n\t\t})\n\t\t.reverse();\n\n\tlet lastThumbnail = thumbnails.pop();\n\tconst thumbnailsColumnOne = [];\n\tconst thumbnailsColumnTwo = [];\n\tconst thumbnailsColumnThree = [];\n\tconst thumbnailsColumnFour = [];\n\twhile (lastThumbnail) {\n\t\tthumbnailsColumnOne.push(lastThumbnail);\n\t\tlastThumbnail = thumbnails.pop();\n\t\tthumbnailsColumnTwo.push(lastThumbnail);\n\t\tlastThumbnail = thumbnails.pop();\n\t\tthumbnailsColumnThree.push(lastThumbnail);\n\t\tlastThumbnail = thumbnails.pop();\n\t\tthumbnailsColumnFour.push(lastThumbnail);\n\t\tlastThumbnail = thumbnails.pop();\n\t}\n\tconst thumbnailsToDisplay = (\n\t\t<div className='grid grid-cols-1 gap-6 md:grid-cols-2 xl:grid-cols-4 w-full p-4 xl:p-9 xl:container xl:mx-auto animate-appear'>\n\t\t\t<div className='flex flex-col gap-6 mx-auto'>{thumbnailsColumnOne}</div>\n\t\t\t<div className='flex flex-col gap-6 mx-auto'>{thumbnailsColumnTwo}</div>\n\t\t\t<div className='flex flex-col gap-6 mx-auto'>{thumbnailsColumnThree}</div>\n\t\t\t<div className='flex flex-col gap-6 mx-auto'>{thumbnailsColumnFour}</div>\n\t\t</div>\n\t);\n\treturn (\n\t\t<div className='relative pb-12'>\n\t\t\t<Header\n\t\t\t\tisSlideShow={false}\n\t\t\t\tlinkTo={slugify(`/${data.allDataJson.nodes[0].name}`, { lower: true })}\n\t\t\t/>\n\t\t\t{thumbnailsToDisplay}\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport const query = graphql`\n\tquery {\n\t\tallDataJson {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tartist {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\timages {\n\t\t\t\t\tgallery {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default IndexPage;\n\nexport const Head = () => <title>Home Page</title>;\n"],"names":["Footer","githubIcon","xmlns","className","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","href","target","rel","image","picName","artistName","path","slugify","lower","Link","to","G","getImage","alt","data","thumbnails","allDataJson","nodes","map","node","images","gallery","childImageSharp","gatsbyImageData","name","artist","key","id","reverse","lastThumbnail","pop","thumbnailsColumnOne","thumbnailsColumnTwo","thumbnailsColumnThree","thumbnailsColumnFour","push","thumbnailsToDisplay","Header","isSlideShow","linkTo","Head"],"sourceRoot":""}